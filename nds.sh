#!/bin/bash

users=$(grep /bin/bash /etc/passwd | cut -f1 -d:)
echo "사용자,로그인 날짜(월),로그인 날짜(일),로그인 시각(시),위험도" >> result.csv
sed -i '1s/^/\n/' result.csv
rm userstime.txt
for user in $users; do
  last "$user" | awk '{if($1=="'$user'") {print $4, $5, $6, $7, $8, $9}}' | awk '!/crash/ && !/still/ && !/logged/ {print}' > "${user}.txt"
  if [ -s "${user}.txt" ]; then
    echo "${user}.txt save to file completely"
  else
    echo "${user}.txt save to file False"
  fi
  file="${user}.txt"
  login_times=($(awk '{split($4, a, ":"); print a[1]}' "$file"))
  login_months=($(awk '{print $2}' "$file"))
  login_dates=($(awk '{print $3}' "$file"))
  logout_times=($(awk '{split($6, a, ":"); print a[1]}' "$file"))
  total_login=0
  total_logout=0
  for time in "${login_times[@]}"; do
    ((total_login+=time))
  done
  for time in "${logout_times[@]}"; do
    ((total_logout+=time))
  done
  if [ "${#login_times[@]}" -gt 0 ]; then
    avg_login=$((total_login / ${#login_times[@]}))
  else
    avg_login=0
  fi
  if [ "${#logout_times[@]}" -gt 0 ]; then
    avg_logout=$((total_logout / ${#logout_times[@]}))
  else
    avg_logout=0
  fi
  echo "사용자: $user" >> userstime.txt
  echo "로그인 평균 시간: $avg_login" >> userstime.txt
  echo "로그아웃 평균 시간: $avg_logout" >> userstime.txt
  for ((i=0; i<${#login_times[@]}; i++)); do
    login_time=${login_times[i]}
    login_month=${login_months[i]}
    login_date=${login_dates[i]}
    login_rule=$((avg_login - 3))
    login_warning=$((avg_login - 1))
    diff_login=$((login_time - avg_login))
    diff_login=${diff_login#-}
    if ((diff_login >= 0 && diff_login <= 1)); then
      danger="안전"
    elif ((diff_login > 1 && diff_login <= 3)); then
      danger="경고"
    elif ((diff_login > 3)); then
      danger="위험"
    else
      danger="분류 없음"
    fi
    echo "$user,$login_month,$login_date,$login_time,$danger" >> result.csv
  done
  echo >> result.csv
done
